(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{365:function(s,e,t){s.exports=t.p+"assets/img/docker-machine_env.dd8d2664.png"},366:function(s,e,t){s.exports=t.p+"assets/img/docker-machine_env_unset.db14fe12.png"},392:function(s,e,t){"use strict";t.r(e);var n=t(45),a=Object(n.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"安装-docker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装-docker"}},[s._v("#")]),s._v(" 安装 Docker")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("Mac\nhttps://docs.docker.com/docker-for-mac/install/")])]),s._v(" "),n("li",[n("p",[s._v("Windows\nhttps://docs.docker.com/docker-for-windows/install/")])]),s._v(" "),n("li",[n("p",[s._v("Linux\nhttps://docs.docker.com/engine/install/")])])]),s._v(" "),n("blockquote",[n("p",[s._v("Centos\nhttps://docs.docker.com/install/linux/docker-ce/centos/")])]),s._v(" "),n("blockquote",[n("p",[s._v("部分库拉取镜像的时候会timeout，可以选择更改仓库源地址到国内\nhttps://blog.csdn.net/weixin_41929524/article/details/96770250")])]),s._v(" "),n("p",[s._v("其中Mac和Windows都是 Docker Desktop，安装过程比较简单。linux安装过程官网较复杂，下面以 Centos 为例，简化如下")]),s._v(" "),n("p",[s._v("1、")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum remove docker "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-client "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-client-latest "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-common "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-latest "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-latest-logrotate "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-logrotate "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-engine\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("2、")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y yum-utils "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  device-mapper-persistent-data "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  lvm2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("3、")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum-config-manager "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --add-repo "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    https://download.docker.com/linux/centos/docker-ce.repo\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("4、")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce docker-ce-cli containerd.io\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("5、")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl start docker\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("6、")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" docker run hello-world\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"普通用户下docker命令去掉sudo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#普通用户下docker命令去掉sudo"}},[s._v("#")]),s._v(" 普通用户下docker命令去掉sudo")]),s._v(" "),n("ol",[n("li",[s._v("创建用户组（已经存在）\n"),n("code",[s._v("sudo groupadd docker")])]),s._v(" "),n("li",[s._v("把当前用户添加到"),n("code",[s._v("docker")]),s._v("组里面\n"),n("code",[s._v("sudo gpasswd -a <username> docker")])]),s._v(" "),n("li",[s._v("重启docker进程\n"),n("code",[s._v("sudo service docker restart")])]),s._v(" "),n("li",[s._v("重启机器并重新登录")])]),s._v(" "),n("h2",{attrs:{id:"docker命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker命令"}},[s._v("#")]),s._v(" docker命令")]),s._v(" "),n("p",[n("code",[s._v("docker")]),s._v(" 常用 "),n("code",[s._v("docker <Management Command> <Command> <Optional?ID>")])]),s._v(" "),n("h2",{attrs:{id:"docker-machine"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-machine"}},[s._v("#")]),s._v(" docker-machine")]),s._v(" "),n("p",[s._v("docker-machine create demo 快速新建一台装有docker的linux机器\ndocker-machine stop demo 关机demo\ndocker-machine ls 列出机器\ndocker-machine ssh demo 登录demo机器\ndocker-machine env demo 查看demo环境变量")]),s._v(" "),n("p",[s._v("切换server")]),s._v(" "),n("p",[n("img",{attrs:{src:t(365),alt:""}})]),s._v(" "),n("p",[s._v("恢复server")]),s._v(" "),n("p",[n("img",{attrs:{src:t(366),alt:""}})]),s._v(" "),n("h4",{attrs:{id:"docker-machine-常用命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-machine-常用命令"}},[s._v("#")]),s._v(" docker-machine 常用命令")]),s._v(" "),n("p",[s._v("最后说一下常用命令把，其实也没什么好讲的，都在help里面有，下面都是docker-machine后加的命令就是docker-machine command")]),s._v(" "),n("ul",[n("li",[s._v("active 查看活跃的 Docker 主机")]),s._v(" "),n("li",[s._v("config 输出连接的配置信息")]),s._v(" "),n("li",[s._v("create 创建一个 Docker 主机")]),s._v(" "),n("li",[s._v("env 显示连接到某个主机需要的环境变量")]),s._v(" "),n("li",[s._v("inspect 输出主机更多信息")]),s._v(" "),n("li",[s._v("ip 获取主机地址")]),s._v(" "),n("li",[s._v("kill 停止某个主机")]),s._v(" "),n("li",[s._v("ls 列出所有管理的主机")]),s._v(" "),n("li",[s._v("provision 重新设置一个已存在的主机")]),s._v(" "),n("li",[s._v("regenerate-certs 为某个主机重新生成 TLS 认证信息")]),s._v(" "),n("li",[s._v("restart 重启主机")]),s._v(" "),n("li",[s._v("rm 删除某台主机")]),s._v(" "),n("li",[s._v("ssh SSH 到主机上执行命令")]),s._v(" "),n("li",[s._v("scp 在主机之间复制文件")]),s._v(" "),n("li",[s._v("mount 挂载主机目录到本地")]),s._v(" "),n("li",[s._v("start 启动一个主机")]),s._v(" "),n("li",[s._v("status 查看主机状态")]),s._v(" "),n("li",[s._v("stop 停止一个主机")]),s._v(" "),n("li",[s._v("upgrade 更新主机 Docker 版本为最新")]),s._v(" "),n("li",[s._v("url 获取主机的 URL")]),s._v(" "),n("li",[s._v("version 输出 docker-machine 版本信息")]),s._v(" "),n("li",[s._v("help 输出帮助信息")])]),s._v(" "),n("p",[n("strong",[s._v("注意简写")]),s._v(" "),n("code",[s._v("docker rm xxx")]),s._v(" 默认是删除container，如果想要删除镜像执行 "),n("code",[s._v("docker rmi xxx")]),s._v(" "),n("code",[s._v("docker container commit")]),s._v(" = "),n("code",[s._v("docker commit")]),s._v(" "),n("code",[s._v("docker image build")]),s._v(" = "),n("code",[s._v("docker build")]),s._v(" "),n("code",[s._v("docker image push")]),s._v(" = "),n("code",[s._v("docker push")])]),s._v(" "),n("h4",{attrs:{id:"组合用法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#组合用法"}},[s._v("#")]),s._v(" 组合用法")]),s._v(" "),n("blockquote",[n("p",[n("code",[s._v("-q")]),s._v("相当于一个语法糖，例如 "),n("code",[s._v("docker rm $(docker container ls -aq)")]),s._v(" = "),n("code",[s._v("docker rm $(docker container ls -a | awk {'print$1'})")])])]),s._v(" "),n("ol",[n("li",[s._v("删除全部containers\n"),n("code",[s._v("docker rm $(docker container ls -aq)")])]),s._v(" "),n("li",[s._v("删除退出状态的containers\n"),n("code",[s._v('docker rm $(docker container -f "status=exited" -q)')])])]),s._v(" "),n("h2",{attrs:{id:"dockerfile"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[s._v("#")]),s._v(" Dockerfile")]),s._v(" "),n("h3",{attrs:{id:"run-cmd-enterpoint"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#run-cmd-enterpoint"}},[s._v("#")]),s._v(" RUN & CMD & ENTERPOINT")]),s._v(" "),n("p",[s._v("RUN: 执行命令并创建新的Image Layer\nCMD: 设置容器启动后默认执行的命令和参数\nENTERPOINTER: 设置容器启动时运行的命令")]),s._v(" "),n("h4",{attrs:{id:"cmd"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cmd"}},[s._v("#")]),s._v(" CMD")]),s._v(" "),n("p",[s._v("容器启动时默认执行的命令\n如果 "),n("code",[s._v("docker run")]),s._v(" 指定了其他命令，CMD命令被忽略\n如果定义了多个CMD，只有最后一个会执行")]),s._v(" "),n("h4",{attrs:{id:"enterpoint"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#enterpoint"}},[s._v("#")]),s._v(" ENTERPOINT")]),s._v(" "),n("p",[s._v("让容器以应用程序或则服务的形式运行\n不会被忽略，一定会执行\n最佳实践：写一个shell脚本最为enterpoint")]),s._v(" "),n("h2",{attrs:{id:"容器之间的link"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#容器之间的link"}},[s._v("#")]),s._v(" 容器之间的link")]),s._v(" "),n("blockquote",[n("p",[s._v("容器启动失败可以使用命令 "),n("code",[s._v("docker logs <container>")]),s._v("查看原因")])]),s._v(" "),n("p",[s._v("在下面的命令中，test2能ping通172.17.3(test1的IP)，同时也能ping通test1(docker内部加了类似DNS的处理)，走的是默认网络bridge，反之test1仅能ping通172.17.2(test2的IP)，不能ping通test2。\n"),n("code",[s._v('docker run -d --name test1 busybox /bin/sh -c "while true; do sleep 3600; done"')]),s._v(" "),n("code",[s._v('docker run -d --name test2 --link test1 busybox /bin/sh -c "while true; do sleep 3600; done"')]),s._v("\n如果用自己创建的网络，可以实现双向互通。")]),s._v(" "),n("blockquote",[n("p",[s._v("推荐下载 "),n("code",[s._v("apt install bridge-utils")]),s._v("，方便查看系统内的bridge，"),n("code",[s._v("brctl show")])])]),s._v(" "),n("ol",[n("li",[s._v("创建网络\n"),n("code",[s._v("docker network create -d bridge my-bridge")]),s._v(" -d 表示采用哪种driver（docker网络默认有三种driver，bridge、host、none）\n现在如果用 "),n("code",[s._v("brctl show")]),s._v(" 就会发现自己新创建出来的网络（会发现interfaces字段没有值）")]),s._v(" "),n("li",[s._v("创建一个container加入自建网络\n"),n("code",[s._v('docker run -d --name test3 --nework my-bridge busybox /bin/sh -c "while true; do sleep 3600; done"')]),s._v("\n现在如果用 "),n("code",[s._v("brctl show")]),s._v(" 就会发现自己新创建出来的网络（会发现interfaces字段有值了）\n也可以使用"),n("code",[s._v("docker network inspect my-bridge")]),s._v("查看链接进来的container")]),s._v(" "),n("li",[s._v("把已有container加入自建网络(这一步也可以是 创建一个container加入自建网络)\n"),n("code",[s._v("docker network connect my-bridge test2")]),s._v(" "),n("code",[s._v("docker network inspect my-bridge")]),s._v("查看链接进来的container就会发现两个container")]),s._v(" "),n("li",[s._v("这样test2和test3就是互通的了，其中test2即链接到默认的"),n("code",[s._v("bridge")]),s._v("和自建的网络"),n("code",[s._v("my-bridge")])])]),s._v(" "),n("h2",{attrs:{id:"容器端口映射"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#容器端口映射"}},[s._v("#")]),s._v(" 容器端口映射")]),s._v(" "),n("p",[s._v("举例，创建一个"),n("code",[s._v("nginx")]),s._v("容器，想要把本地80端口映射到容器里面的80端口\n"),n("code",[s._v("docker run --name web -d -p 80:80 nginx")])]),s._v(" "),n("h2",{attrs:{id:"多容器复杂应用的部署"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#多容器复杂应用的部署"}},[s._v("#")]),s._v(" 多容器复杂应用的部署")]),s._v(" "),n("p",[s._v("先看一下程序，和 redis 组合使用\napp.py")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" flask "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Flask\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" redis "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Redis\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" os\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" socket\n\napp "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Flask"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__name__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nredis "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Redis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("host"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("environ"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'REDIS_HOST'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'127.0.0.1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" port"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("route")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("hello")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    redis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("incr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hits'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello Container World! I have been seen %s times and my hostname is %s.\\n'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("redis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hits'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("socket"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gethostname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" __name__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"__main__"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("run"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("host"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.0.0.0"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" port"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" debug"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n docker run "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("d "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("link redis "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("name flask"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("redis "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("e REDIS_HOST"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("redis lengband"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("flask"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("redis\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[s._v("Dockerfile")]),s._v(" "),n("blockquote",[n("p",[s._v("EXPOSE 5000 是为了本地启用时端口映射")])]),s._v(" "),n("div",{staticClass:"language-Dockerfile line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token instruction"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" python:2.7")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token instruction"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LABEL")]),s._v(" maintaner="),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lengband@163.com"')])]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token instruction"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . /app")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token instruction"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token instruction"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" pip install flask redis")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token instruction"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 5000")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token instruction"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"python"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"app.py"')]),s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("ol",[n("li",[s._v("启动 redis\n"),n("code",[s._v("docker run -d --name redis redis")])]),s._v(" "),n("li",[s._v("打包镜像\n"),n("code",[s._v("docker build -t lengband/flask-redis .")])]),s._v(" "),n("li",[s._v("启动镜像(指定环境变量"),n("code",[s._v("REDIS_HOST")]),s._v(")\n"),n("code",[s._v("docker run -d --link redis --name flask-redis -e REDIS_HOST=redis lengband/flask-redis")])]),s._v(" "),n("li",[s._v("验证\n先进入base，"),n("code",[s._v("docker exec -it flask-redis /bin/sh")]),s._v("，然后执行"),n("code",[s._v("curl 127.0.0.1:5000")]),s._v(",会输出如下\nHello Container World! I have been seen 1 times and my hostname is 3573f2231c28.\n再次执行 "),n("code",[s._v("curl 127.0.0.1:5000")]),s._v("，会输出如下\nHello Container World! I have been seen 2 times and my hostname is 3573f2231c28.\n此时，说明已经生效")]),s._v(" "),n("li",[s._v("（option）本地验证\n先停止和删除原有container，\n"),n("code",[s._v("docker stop lengband/flask-redis")]),s._v("和"),n("code",[s._v("docker rm lengband/flask-redis")]),s._v("\n然后执行 "),n("code",[s._v("docker run -d -p 5000:5000 --link redis --name flask-redis -e REDIS_HOST=redis lengband/flask-redis")]),s._v("\n之后打开浏览器 127.0.0.1:5000 既可以看见\nHello Container World! I have been seen 3 times and my hostname is 3573f2231c28.\n如果没有浏览器，也可执行 "),n("code",[s._v("curl 127.0.0.1:5000")]),s._v("，进行验证")])]),s._v(" "),n("h2",{attrs:{id:"部署一个workpress"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#部署一个workpress"}},[s._v("#")]),s._v(" 部署一个workpress")]),s._v(" "),n("ol",[n("li",[n("code",[s._v("docker run -d --name mysql -v mysql-data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=wordpress mysql")])]),s._v(" "),n("li",[n("code",[s._v("docker run -d -e WORDPRESS_DB_HOST=mysql:3306 --link mysql -p 8080:80 wordpress")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);